const o="interestItems";function s(){if(typeof window>"u")return;const e=new CustomEvent("itemsChange",{detail:{items:i()}});window.dispatchEvent(e)}function i(){if(typeof window>"u")return[];try{const e=localStorage.getItem(o);return e?JSON.parse(e):[]}catch(e){return console.error("Error getting interested items from localStorage:",e),[]}}function d(e){if(typeof window>"u")return!1;try{const t=i();return t.findIndex(n=>n.id===e.id)===-1?(t.push(e),localStorage.setItem(o,JSON.stringify(t)),s(),!0):!1}catch(t){return console.error("Error adding interested item to localStorage:",t),!1}}function a(e){if(typeof window>"u")return!1;try{const r=i().filter(n=>n.id!==e);return localStorage.setItem(o,JSON.stringify(r)),s(),!0}catch(t){return console.error("Error removing interested item from localStorage:",t),!1}}function u(e){return typeof window>"u"?!1:i().some(r=>r.id===e)}function c(e,t){if(typeof window>"u")return!1;try{const r=i(),n=r.find(f=>f.id===e);return n?t<0||n.maxQuantity!=null&&t>n.maxQuantity?!1:t===0?a(e):(n.quantity=t,localStorage.setItem(o,JSON.stringify(r)),s(),!0):!1}catch(r){return console.error("Error updating item quantity:",r),!1}}function m(e){return typeof window>"u"?0:i().find(n=>n.id===e)?.quantity||0}export{d as a,m as b,i as g,u as i,a as r,c as u};
